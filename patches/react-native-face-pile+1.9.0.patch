diff --git a/node_modules/react-native-face-pile/src/index.js b/node_modules/react-native-face-pile/src/index.js
index 76562d7..8ed5ba0 100644
--- a/node_modules/react-native-face-pile/src/index.js
+++ b/node_modules/react-native-face-pile/src/index.js
@@ -1,6 +1,9 @@
 import React, { PureComponent } from 'react'
 import PropTypes from 'prop-types'
-import { View, Text, Image, StyleSheet, Animated } from 'react-native'
+import { View, Text, StyleSheet, Animated } from 'react-native'
+import FastImage from "react-native-fast-image";
+import { createImageProgress } from "react-native-image-progress";
+const Image = createImageProgress(FastImage);
 
 const styles = StyleSheet.create({
   container: {
@@ -11,20 +14,19 @@ const styles = StyleSheet.create({
     alignSelf: 'center'
   },
   circleImage: {
-    borderWidth: 2,
+    borderWidth: 1,
     borderColor: 'white'
   },
   overflow: {
-    backgroundColor: '#b6c0ca',
     justifyContent: 'center',
     alignItems: 'center',
     marginLeft: 18
   },
   overflowLabel: {
-    color: '#fff',
+    color: '#000',
     fontSize: 14,
     letterSpacing: -1,
-    marginLeft: 3,
+    marginLeft: 5,
     fontWeight: 'bold'
   }
 })
@@ -37,7 +39,7 @@ class Circle extends PureComponent {
 
     return (
       <Animated.View
-        style={{ marginRight: -marginRight }}
+        style={{ marginRight: -marginRight, overflow:'hidden' }}
       >
         <Image
           style={[
@@ -45,11 +47,15 @@ class Circle extends PureComponent {
             {
               width: innerCircleSize,
               height: innerCircleSize,
-              borderRadius: circleSize
+              borderRadius: circleSize,
+              overflow:'hidden'
             },
             imageStyle
           ]}
-          source={{ uri: face.imageUrl }}
+          source={{ uri: face.imageUrl,
+            priority: FastImage.priority.high,
+            cache: FastImage.cacheControl.immutable,
+           }}
         />
       </Animated.View>
     )
@@ -103,6 +109,53 @@ export default class FacePile extends PureComponent {
     hideOverflow: false,
   }
 
+  _renderOverflowCircleZero = overflow => {
+    const {
+      circleStyle,
+      overflowStyle,
+      overflowLabelStyle,
+      circleSize,
+      offset
+    } = this.props
+    
+    const innerCircleSize = circleSize * 1.8
+    const marginLeft = (circleSize * offset) - circleSize / 1.6
+
+    return (
+      <View
+        style={[
+          styles.circle,
+          circleStyle
+        ]}
+      >
+        <View
+          style={[
+            styles.overflow,
+            {
+              width: innerCircleSize,
+              height: innerCircleSize,
+              borderRadius: circleSize,
+              marginLeft: marginLeft
+            },
+            overflowStyle
+          ]}
+        >
+          <Text
+            style={[
+              styles.overflowLabel,
+              {
+                fontSize: circleSize * 0.7
+              },
+              overflowLabelStyle
+            ]}
+          >
+            {overflow}
+          </Text>
+        </View>
+      </View>
+    )
+  }
+
   _renderOverflowCircle = overflow => {
     const {
       circleStyle,
@@ -167,14 +220,15 @@ export default class FacePile extends PureComponent {
   }
 
   render () {
-    const { render, faces, numFaces, hideOverflow, containerStyle } = this.props
+    const { render, faces, numFaces, containerStyle } = this.props
     if (render) return render({ faces, numFaces })
 
     const { facesToRender, overflow } = renderFacePile(faces, numFaces)
 
     return (
       <View style={[styles.container, containerStyle]}>
-        {overflow > 0 && !hideOverflow && this._renderOverflowCircle(overflow)}
+        {overflow > 0 && this._renderOverflowCircle(overflow)}
+        {facesToRender < 0 && this._renderOverflowCircleZero(overflow)}
         {Array.isArray(facesToRender) && facesToRender.map(this._renderFace)}
       </View>
     )
